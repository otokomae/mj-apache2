<IfModule mod_ssl.c>
  <VirtualHost *:<%= @params[:server_port] || 443 %>>
    ServerName <%= @params[:server_name] %>
    <% if @params[:server_aliases] -%>
    ServerAlias <%= @params[:server_aliases].join " " %>
    <% end -%>
    DocumentRoot <%= @params[:docroot] %>

    <Directory <%= @params[:docroot] %>>
      Options <%= [@params[:directory_options] || "FollowSymLinks" ].flatten.join " " %>
      AllowOverride <%= [@params[:allow_override] || "None" ].flatten.join " " %>
    <% if node['apache']['version'] == '2.4' -%>
      Require all granted
    <% else -%>
      Order allow,deny
      Allow from all
    <% end -%>
    </Directory>

    <Directory />
      Options FollowSymLinks
      AllowOverride None
    </Directory>

    <Location /server-status>
      SetHandler server-status

    <% if node['apache']['version'] == '2.4' -%>
      Require local
    <% else -%>
      Order Deny,Allow
      Deny from all
      Allow from 127.0.0.1
    <% end -%>

    </Location>

    RewriteEngine On
    <%- if node['apache']['version'] == '2.4' -%>
    LogLevel info rewrite:trace1
    <%- else -%>
    LogLevel info
    RewriteLog <%= node['apache']['log_dir'] %>/<%= @application_name %>-rewrite.log
    RewriteLogLevel 0
    <%- end -%>

    ErrorLog <%= node['apache']['log_dir'] %>/<%= @params[:name] %>-error.log
    CustomLog <%= node['apache']['log_dir'] %>/<%= @params[:name] %>-access.log combined

    <% if @params[:directory_index] -%>
    DirectoryIndex <%= [@params[:directory_index]].flatten.join " " %>
    <% end -%>

    # Canonical host, <%= @params[:server_name] %>
    RewriteCond %{HTTP_HOST}   !^<%= @params[:server_name] %> [NC]
    RewriteCond %{HTTP_HOST}   !^$
    RewriteRule ^/(.*)$        http://<%= @params[:server_name] %>/$1 [L,R=301]

    RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^.*$ /system/maintenance.html [L,R=503]

    #   SSL Engine Switch:q
    #   Enable/Disable SSL for this virtual host.
    SSLEngine on

    #   A self-signed (snakeoil) certificate can be created by installing
    #   the ssl-cert package. See
    #   /usr/share/doc/apache2/README.Debian.gz for more info.
    #   If both key and certificate are stored in the same file, only the
    #   SSLCertificateFile directive is needed.
    SSLCertificateFile      <%= node['mj-apache2']['ssl_dir'] %>/<%= @params[:key_file_name] %>.crt
    SSLCertificateKeyFile   <%= node['mj-apache2']['ssl_dir'] %>/<%= @params[:key_file_name] %>.key

    #   Server Certificate Chain:
    SSLCertificateChainFile <%= node['mj-apache2']['ssl_dir'] %>/<%= @params[:key_file_name] %>.cer
    #SSLCertificateChainFile /etc/apache2/ssl.crt/server-ca.crt

    #   Certificate Authority (CA):
    #SSLCACertificatePath /etc/ssl/certs/
    #SSLCACertificateFile /etc/apache2/ssl.crt/ca-bundle.crt

    #   Certificate Revocation Lists (CRL):
    #SSLCARevocationPath /etc/apache2/ssl.crl/
    #SSLCARevocationFile /etc/apache2/ssl.crl/ca-bundle.crl

    #   Client Authentication (Type):
    #SSLVerifyClient require
    #SSLVerifyDepth  10

    #   SSL Engine Options:
    <FilesMatch "\.(cgi|shtml|phtml|php)$">
            SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory /usr/lib/cgi-bin>
            SSLOptions +StdEnvVars
    </Directory>

    #   SSL Protocol Adjustments:
    BrowserMatch "MSIE [2-6]" \
            nokeepalive ssl-unclean-shutdown \
            downgrade-1.0 force-response-1.0
    # MSIE 7 and newer should be able to use keepalive
    BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown
  </VirtualHost>
</IfModule>